// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  //TODO: modificar para mysql
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String   @id @default(uuid())
  username   String
  email      String   @unique
  features   String[] @default([])
  avatar_url String

  created_at DateTime @default(now())
  updated_at DateTime @default(now())

  accounts  Account[]
  sessions  Session[]
  questions Question[]
  chats     Chat[]

  @@map("users")
}

model Account {
  id                  String  @id @default(cuid())
  user_id             String
  type                String
  provider            String
  provider_account_id String
  refresh_token       String?
  access_token        String?
  expires_at          Int?
  token_type          String?
  scope               String?
  id_token            String?
  session_state       String?

  user User @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@unique([provider, provider_account_id])
  @@map("accounts")
}

model Session {
  id            String   @id @default(cuid())
  session_token String   @unique
  user_id       String
  expires       DateTime

  user User @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model Question {
  id      String @id @default(uuid())
  content String
  user    User   @relation(fields: [user_id], references: [id])
  user_id String

  created_at DateTime @default(now())
  updated_at DateTime @default(now())

  chat Chat[]

  @@map("questions")
}

model Chat {
  id          String @id @default(uuid())
  content     String
  question_id String
  user_id     String

  question Question @relation(fields: [question_id], references: [id])
  user     User     @relation(fields: [user_id], references: [id])

  created_at DateTime @default(now())

  @@map("chats")
}
