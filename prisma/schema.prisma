// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id         String @id @default(uuid())
  username   String
  email      String @unique
  avatar_url String @db.Text

  created_at DateTime @default(now())
  updated_at DateTime @default(now())

  accounts Account[]
  sessions Session[]
  chat     Chat[]
  message  Message[]

  @@map("users")
}

model Account {
  id                  String  @id @default(cuid())
  user_id             String
  type                String
  provider            String
  provider_account_id String
  refresh_token       String? @db.Text
  access_token        String? @db.Text
  expires_at          Int?
  token_type          String?
  scope               String?
  id_token            String? @db.Text
  session_state       String?

  user User @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@unique([provider, provider_account_id])
  @@map("accounts")
}

model Session {
  id            String   @id @default(cuid())
  session_token String   @unique
  user_id       String
  expires       DateTime

  user User @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model Chat {
  id      String @id @default(uuid())
  content String @db.Text
  user_id String

  created_at DateTime @default(now())
  updated_at DateTime @default(now())

  user    User      @relation(fields: [user_id], references: [id])
  message Message[]

  @@map("chats")
}

model Message {
  id           String @id @default(uuid())
  content      String @db.Text
  content_type String

  chat_id String
  user_id String

  chat Chat @relation(fields: [chat_id], references: [id])
  user User @relation(fields: [user_id], references: [id])

  created_at DateTime @default(now())

  @@map("messages")
}
